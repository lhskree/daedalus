// Color scheme
$color-string: #8d1da8;
$color-number: #8a7bdd;
$color-bool: #4506fc;
$color-obj: #ffdb41;
$color-arr: #d09a15;
$color-null: #ababab;
$color-und: #777;

// Mixins

@mixin object($background: "#000") {
    & > p {
        background-color: #{$background};
        color: darken($background, 55%);
        cursor: pointer;
    }
}

// Placeholders

%data {
    p {
        border-radius: 15px;
        padding: .5em;
        min-width: 300px;
        max-width: 550px;
    }
}

// Generators

/* Indentation classes */
@for $i from 1 to 15 {
    .depth-#{$i} {
        padding-left: 45px;   
    }
}
/* End indentation classes */

html,
body {
    margin: 0;
    padding: 1em 3em;
    background-color: #222;
    @media screen and (max-width: 900px) {
            padding: 1em 0;
    } 
}

.title {
    font: normal small-caps normal 6em/1.2em 'Forum', serif;
    letter-spacing: .09em;
    color: #fff;
    margin: 0 0 .5em 0;
    text-align: center;
    @media screen and (max-width: 900px) {
            font-size: 4em;
    }
}

.instructions {
    font: normal 2em/1em 'Forum', Georgia, serif;
    color: #fff;
    text-align: center;
    margin: 1em 0;
    @media screen and (max-width: 900px) {
            font-size: 1.2em;
    }
}

.entryArea {
    margin: 0;
    display: flex;
    img {
        display: inline-block;
        margin: auto;
        padding: 16px;
        width: 400px;
        height: 600px;
        @media screen and (max-width: 1100px) and (min-width: 900px) {
            width: 300px;
            height: 500px;
        }
        @media screen and (max-width: 900px) {
            display: none;
        }
        background-color: #4a4a4a;
    }
    textarea {
        display: inline-block;
        padding: 16px;
        margin: auto;
        width: 400px;
        height: 600px;
        @media screen and (max-width: 1100px) and (min-width: 900px) {
            width: 300px;
            height: 500px;
        }
        @media screen and (max-width: 900px) {
            width: 100%;
            height: 500px;
        }
        background-color: #4a4a4a;
        color: #ddd;
        font-family: 'Droid Sans Mono', monospace;
        border: none;
        &:focus {
            outline: #fff auto 2px;
        }
    }
}

.submit {
    font: normal 1.7em/1em 'Droid Sans Mono', Arial, sans-serif;
    padding: .5em 1em;
    display: block;
    margin: 2em auto;
    background-color: #eee;
    border: none;
    transition: .7s;
    &:hover {
        background-color: $color-bool;
        color: #fff;
        transition: .7s;
    }
}

// Error Message and iFrame to JSLint
.errInvalidJSON {
    background-color: darken($color-bool, 15%);
    color: #fff;
    text-align: center;
    padding: .5em 1em;
    display: block;
    margin: 0 auto;
    font: normal 1.3em/1em 'Droid Sans Mono', monospace;
}

.jsonLint {
    border: none;
    display: block;
    margin: 0 auto;
    width: 100%;
    height: 600px;
}

.interpretation {
    padding: 5em;
    @media screen and (max-width: 900px) {
        padding: .5em;
    }
}

.data {
    @extend %data;
}

.string {
    @include object($color-string);
}

.number {
    @include object($color-number);
}

.boolean {
    @include object($color-bool);
}

.array {
    @include object($color-arr);
}

.object {
    @include object($color-obj)
}

.null {
    @include object($color-null)
}

.undefined {
    @include object($color-und)
}